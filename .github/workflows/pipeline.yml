name: Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: us
  REPOSITORY: chain-queries
  IMAGE: chain-queries

jobs:
  build:
    name: Build
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - uses: 'docker/login-action@v1'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      # Build the Docker image
      - name: Build
        run: |-
          cd archive/fastify && docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} .
          docker tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest

      # Push the Docker image to Google Artifact Registry
      - name: Publish
        run: |-
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
      - name: Publish lastest
        run: |-
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest
